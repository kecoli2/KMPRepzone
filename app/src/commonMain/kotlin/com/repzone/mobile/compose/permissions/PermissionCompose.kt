package com.repzone.mobile.compose.permissions

import androidx.compose.material3.Button
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.rememberCoroutineScope
import androidx.compose.runtime.setValue
import com.repzone.core.util.PermissionStatus
import com.repzone.mobile.managers.PermissionManager
import kotlinx.coroutines.launch
import org.jetbrains.compose.ui.tooling.preview.Preview

// âœ¨ Platforma gÃ¶re oluÅŸturulan managerâ€™Ä± Compose iÃ§inde elde etmek iÃ§in:
@Composable
expect fun rememberPermissionManager(): PermissionManager

// ðŸ”§ UIâ€™den Ã§aÄŸÄ±rmak iÃ§in kÃ¼Ã§Ã¼k bir yardÄ±mcÄ± composable (Ã¶rnek)
@Composable
fun PermissionsSection() {
    val pm = rememberPermissionManager()
    val scope = rememberCoroutineScope()

    var btStatus by remember { mutableStateOf<PermissionStatus?>(null) }
    var notifStatus by remember { mutableStateOf<PermissionStatus?>(null) }

    // Buraya kendi buton/Metin tasarÄ±mÄ±nÄ± koy
    Button(onClick = {
        scope.launch { btStatus = pm.ensureBluetooth() }
    }) { Text("Bluetooth izni iste") }

    Button(onClick = {
        scope.launch { notifStatus = pm.ensureNotifications() }
    }) { Text("Bildirim izni iste") }

    // Basit durum Ã§Ä±ktÄ±larÄ±
    if (btStatus != null) {
        Text("Bluetooth: $btStatus")
    }
    if (notifStatus != null) {
        Text("Notifications: $notifStatus")
    }
}